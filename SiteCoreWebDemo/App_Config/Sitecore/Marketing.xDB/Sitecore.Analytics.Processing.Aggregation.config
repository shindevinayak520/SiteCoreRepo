<?xml version="1.0" encoding="utf-8"?>

<!--

Purpose: This include file configures how the processing subsystem of the Sitecore Experience Database (xDB) aggregates data from the
collection database before it is stored in the reporting database for use by Sitecore reporting applications.

This file should always be enabled in case the current server needs to:
- Perform aggregation tasks (a processing server).
- Perform management tasks such as rebuilding the reporting database (a content management server).

If the current server does not need to have the aggregation subsystem enabled, you can rename this config file so that it has a ".disabled"
extension.

If this config file is enabled, the Sitecore.Analytics.Processing.Aggregation.ProcessingPools.config file must also be enabled.

-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
  <sitecore role:require="Standalone or Reporting or ContentManagement or Processing">
    <aggregation>
      <aggregatorContexts>
        <interaction>
          <live type="Sitecore.Analytics.Aggregation.Data.LiveInteractionAggregatorContext">
            <param desc="pool" ref="aggregationProcessing/processingPools/live" />
            <ReportingTargets hint="list:AddReportingTarget">
              <primary ref="aggregation/reportingStorageProviders/primary" />
              <secondary ref="aggregation/reportingStorageProviders/secondary.live" />
            </ReportingTargets>
          </live>
          <history type="Sitecore.Analytics.Aggregation.History.HistoryInteractionAggregatorContext">
            <ReportingTargets hint="list:AddReportingTarget">
              <secondary ref="aggregation/reportingStorageProviders/secondary.history" />
            </ReportingTargets>
          </history>
        </interaction>
        <contact>
          <live type="Sitecore.Analytics.Aggregation.Data.Contact.ContactProcessingContext, Sitecore.Analytics.Aggregation">
            <Pool ref="aggregationProcessing/processingPools/contact" />
          </live>
        </contact>
      </aggregatorContexts>
      <dateTimePrecisionStrategy type="Sitecore.Analytics.Aggregation.Data.DateTimeMinutePrecisionStrategy, Sitecore.Analytics.Aggregation" />
      <reportingStorageManager type="Sitecore.Analytics.Aggregation.History.ReportingStorageManager" singleInstance="true">
        <param desc="rebuildTaskDataProvider" type="Sitecore.Analytics.Aggregation.History.SqlRebuildProcessStateDataProvider, Sitecore.Analytics.Sql" singleInstance="true">
          <param desc="connectionStringName">xdb.processing.tasks</param>
          <param desc="commandTimeout" type="Sitecore.Analytics.Core.ConfigurationHelper, Sitecore.Analytics.Core" factoryMethod="ToInt" arg0="60" />
          <param desc="retryRegistry" type="Sitecore.Framework.TransientFaultHandling.IRetryerRegistry, Sitecore.Framework.TransientFaultHandling.Abstractions" resolve="true" />
          <param desc="retryerName">Analytics.Aggregation.SqlServer.Retryer</param>
        </param>
        <TimeToClearStorage>0.00:01:00</TimeToClearStorage>
        <ReportingTargetConfigPath>aggregation/reportingStorageProviders/secondary.history</ReportingTargetConfigPath>
        <HistoryAggregatorManagers hint="list:AddAggregator">
          <interaction type="Sitecore.Analytics.Aggregation.History.InteractionHistoryAggregatorManager" singleInstance="true">
            <TaskManager ref="aggregation/historyTaskManager" />
          </interaction>
        </HistoryAggregatorManagers>
      </reportingStorageManager>
      <historyTaskManager type="Sitecore.Analytics.Aggregation.History.HistoryTaskManager, Sitecore.Analytics.Aggregation" singleInstance="true">
        <param desc="processingPool" ref="aggregationProcessing/processingPools/history" />
        <param desc="xdbContextFactory" type="Sitecore.Analytics.Aggregation.XConnect.DefaultXdbContextFactory, Sitecore.Analytics.Aggregation" />
        <param desc="taskDataProvider" type="Sitecore.Analytics.Aggregation.History.SqlHistoryTaskDataProvider, Sitecore.Analytics.Sql">
          <param desc="connectionStringName">xdb.processing.tasks</param>
          <param desc="commandTimeout" type="Sitecore.Analytics.Core.ConfigurationHelper, Sitecore.Analytics.Core" factoryMethod="ToInt" arg0="60" />
          <param desc="retryRegistry" type="Sitecore.Framework.TransientFaultHandling.IRetryerRegistry, Sitecore.Framework.TransientFaultHandling.Abstractions" resolve="true" />
          <param desc="retryerName">Analytics.Aggregation.SqlServer.Retryer</param>
        </param>
        <param desc="cursorDataProviderFactory" type="Sitecore.Analytics.Aggregation.History.SqlHistoryCursorDataProviderFactory, Sitecore.Analytics.Sql">
          <param desc="connectionStringName">xdb.processing.tasks</param>
          <param desc="commandTimeout" type="Sitecore.Analytics.Core.ConfigurationHelper, Sitecore.Analytics.Core" factoryMethod="ToInt" arg0="60" />
          <param desc="ownershipTimeoutMs" type="Sitecore.Analytics.Core.ConfigurationHelper, Sitecore.Analytics.Core" factoryMethod="ToInt" arg0="60000" />
          <param desc="retryRegistry" type="Sitecore.Framework.TransientFaultHandling.IRetryerRegistry, Sitecore.Framework.TransientFaultHandling.Abstractions" resolve="true" />
          <param desc="retryerName">Analytics.Aggregation.SqlServer.Retryer</param>
        </param>
      </historyTaskManager>
      <!-- Reporting Storage Providers: -->
      <reportingStorageProviders>
        <primary type="Sitecore.Analytics.Aggregation.SqlReportingStorageProvider, Sitecore.Analytics.Sql" singleInstance="true">
          <param desc="connectionStringName">reporting</param>
          <TrailLength>7.00:00:00</TrailLength>
        </primary>
        <secondary.live type="Sitecore.Analytics.Aggregation.SqlReportingStorageProvider, Sitecore.Analytics.Sql" singleInstance="true">
          <param desc="connectionStringName">reporting.secondary</param>
          <param desc="cutoffBehavior">StoreOnlyAfterCutOffInclusive</param>
        </secondary.live>
        <secondary.history type="Sitecore.Analytics.Aggregation.SqlReportingStorageProvider, Sitecore.Analytics.Sql" singleInstance="true">
          <param desc="connectionStringName">reporting.secondary</param>
          <param desc="cutoffBehavior">StoreOnlyBeforeCutOffExclusive</param>
        </secondary.history>
      </reportingStorageProviders>
      <routines>
        <ExecRoutineStatementBuilder type="Sitecore.Analytics.Aggregation.Scripting.Builders.ExecRoutineStatementBuilder, Sitecore.Analytics.Sql" singleInstance="true">
          <mappings hint="list:AddMapping">
            <!-- Dimensions -->
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Assets</Table>
              <Routine>Ensure_Assets_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>BusinessUnits</Table>
              <Routine>Ensure_BusinessUnits_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>DeviceNames</Table>
              <Routine>Ensure_DeviceNames_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>FailureDetails</Table>
              <Routine>Ensure_FailureDetails_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Items</Table>
              <Routine>Ensure_Items_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Keywords</Table>
              <Routine>Ensure_Keywords_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>ReferringSites</Table>
              <Routine>Ensure_ReferringSites_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>SiteNames</Table>
              <Routine>Ensure_SiteNames_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Languages</Table>
              <Routine>Ensure_Languages_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <!-- Mutable Dimensions -->
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Accounts</Table>
              <Routine>Ensure_Accounts_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Contacts</Table>
              <Routine>Ensure_Contacts_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>TrafficTypes</Table>
              <Routine>Upsert_TrafficType</Routine>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>VisitorClassification</Table>
              <Routine>Upsert_VisitorClassification</Routine>
            </SqlMappingEntity>
            <!-- Facts -->
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_Conversions</Table>
              <Routine>Add_Conversions_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
              <TableType>Conversions_Type</TableType>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_Downloads</Table>
              <Routine>Add_Downloads_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
              <TableType>Downloads_Type</TableType>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_Failures</Table>
              <Routine>Add_Failures_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
              <TableType>Failures_Type</TableType>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_FollowHits</Table>
              <Routine>Add_FollowHits_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
              <TableType>FollowHits_Type</TableType>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_PageViews</Table>
              <Routine>Add_PageViews</Routine>
            </SqlMappingEntity>
            <SqlMappingEntity uid="Fact_PageViewsByLanguage" type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_PageViewsByLanguage</Table>
              <Routine>Add_PageViewsByLanguage</Routine>
              <IsMultiRow>False</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity uid="Fact_RulesExposure" type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_RulesExposure</Table>
              <Routine>Add_RulesExposure</Routine>
              <IsMultiRow>False</IsMultiRow>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_SiteSearches</Table>
              <Routine>Add_SiteSearches_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
              <TableType>SiteSearches_Type</TableType>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_SlowPages</Table>
              <Routine>Add_SlowPages_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
              <TableType>SlowPages_Type</TableType>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_Traffic</Table>
              <Routine>Add_Traffic_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
              <TableType>Traffic_Type</TableType>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_ValueBySource</Table>
              <Routine>Add_ValueBySource_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
              <TableType>ValueBySource_Type</TableType>
            </SqlMappingEntity>
            <SqlMappingEntity type="Sitecore.Analytics.Aggregation.SqlMappingEntity, Sitecore.Analytics.Sql">
              <Table>Fact_VisitsByBusinessContactLocation</Table>
              <Routine>Add_VisitsByBusinessContactLocation_Tvp</Routine>
              <IsMultiRow>True</IsMultiRow>
              <TableType>VisitsByBusinessContactLocation_Type</TableType>
            </SqlMappingEntity>
          </mappings>
        </ExecRoutineStatementBuilder>
        <TypeBasedStatementBuilder type="Sitecore.Analytics.Aggregation.Scripting.Builders.TypeBasedStatementBuilder, Sitecore.Analytics.Sql" singleInstance="true">
          <mappings hint="list:AddPrefix">
            <SqlRoutineTypeMap type="Sitecore.Analytics.Aggregation.SqlRoutineTypeMap, Sitecore.Analytics.Sql">
              <TableType>Sitecore.Analytics.Aggregation.Data.Model.Fact, Sitecore.Analytics.Aggregation</TableType>
              <RoutinePrefix>Add_</RoutinePrefix>
            </SqlRoutineTypeMap>
            <SqlRoutineTypeMap type="Sitecore.Analytics.Aggregation.SqlRoutineTypeMap, Sitecore.Analytics.Sql">
              <TableType>Sitecore.Analytics.Aggregation.Data.Model.Dimension, Sitecore.Analytics.Aggregation</TableType>
              <RoutinePrefix>Ensure_</RoutinePrefix>
            </SqlRoutineTypeMap>
          </mappings>
        </TypeBasedStatementBuilder>
      </routines>
    </aggregation>
    <pipelines>
      <initialize>
        <processor type="Sitecore.Analytics.Aggregation.Pipelines.Loader.InitializeAggregationPerformanceCounters, Sitecore.Analytics.Aggregation" />
        <processor type="Sitecore.Analytics.Processing.Pipelines.Loader.InitializeProcessingPerformanceCounters, Sitecore.Analytics.Processing" />
        <processor type="Sitecore.Analytics.Pipelines.Loader.InitializeSqlPerformanceCounters, Sitecore.Analytics.Sql" />
      </initialize>
      <group groupName="analytics.aggregation">
        <pipelines>
          <interactionsBatch>
            <processor type="Sitecore.Analytics.Aggregation.Pipelines.InteractionsBatch.RunInteractionsPipeline, Sitecore.Analytics.Aggregation" resolve="true" />
          </interactionsBatch>
          <interactions>
            <processor type="Sitecore.Analytics.Aggregation.Pipelines.Interactions.LogAggregationInfo, Sitecore.Analytics.Aggregation" resolve="true" />
          </interactions>
          <contacts />
        </pipelines>
      </group>
    </pipelines>
    <log4net>
      <appender name="AggregationLogFileAppender" type="log4net.Appender.SitecoreLogFileAppender, Sitecore.Logging">
        <file value="$(dataFolder)/logs/Aggregation.log.{date}.{time}.txt" />
        <appendToFile value="true" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
        </layout>
        <encoding value="utf-8" />
      </appender>
      <logger name="Sitecore.Analytics.Aggregation" additivity="false">
        <level value="INFO" />
        <appender-ref ref="AggregationLogFileAppender" />
      </logger>
    </log4net>
    <TransientFaultHandling>
      <Retryers>
        <!--Retryer for Sql operations.-->
        <Analytics.Aggregation.SqlServer.Retryer>
          <Type>Sitecore.Framework.TransientFaultHandling.Sql.DefaultSqlPolicyRetryerFactory, Sitecore.Framework.TransientFaultHandling.Sql</Type>
          <Options>
            <ExponentialRetry>
              <MaxAttempts>10</MaxAttempts>
              <MinBackoff>00:00:01</MinBackoff>
              <MaxBackoff>00:00:30</MaxBackoff>
              <DeltaBackoff>00:00:10</DeltaBackoff>
            </ExponentialRetry>
          </Options>
        </Analytics.Aggregation.SqlServer.Retryer>
      </Retryers>
    </TransientFaultHandling>
  </sitecore>
</configuration>
