<?xml version="1.0" encoding="utf-8"?>

<!--

Purpose: This include file configures the item serialization subsystem in Sitecore.

-->
<configuration xmlns:serialization="http://www.sitecore.net/xmlconfig/serialization/">
    <sitecore>
        <settings>
            <!--  SERIALIZATION - INVALID FILE NAME CHARS
            When generating file names that correspond to item names, the serialization API encodes the "$" and "%" characters, as well 
            as any characters that are invalid in path names as returned by the System.IO.Path.GetInvalidFileNameChars() method. 
            You use this setting to specify any additional characters that must be encoded, for example, to meet the requirements of a source 
            control system that does not allow specific characters in file names.
            Default value: ""
            -->
            <setting name="Serialization.InvalidFileNameChars" value="" />

            <!--  SERIALIZATION - SERIALIZATION FOLDER PATH MAX LENGTH
            In Windows, file system paths may not exceed 248 characters in length. The 
            serialization API therefore shortens long path names. This setting specifies the maximum length of the path to the data/serialization 
            folder, which determines how long item paths can be before they are shortened.
            Important: The value of this setting must be the same on every Sitecore instance that accesses the serialized data. 
            Important: If you change this value, remove the contents of the serialization folder and serialize all the items again. 
            Otherwise duplicates of serialized items may appear in the serialization folder.
            Example: A value of "90"  means that item paths longer than 150 characters are shortened. 
            Sitecore reserves 8 characters and 248 - 8 - 90 = 150. 
            Default value: 90
            -->
            <setting name="Serialization.SerializationFolderPathMaxLength" value="90" />

            <!--  SERIALIZATION TYPE
            Defines serialization type. Possible variants: default and YAML
            Default value: default
            -->
            <setting name="Serialization.SerializationType" value="default" />

            <!--  SERIALIZATION FOLDER
            Points to the root of the serialized databases tree (when using the serialization functionality).
            Default value: $(dataFolder)/serialization
            -->
            <setting name="SerializationFolder" value="$(dataFolder)/serialization" />

            <!--  MAX ITEM NAME LENGTH BEFORE TRUNCATION
            NOTE: This setting is only required when the 'Serialization.SerializationType' setting is set to YAML.
            Sitecore item names can become so long that they cannot fit on the filesystem without hitting the max path length.
            This setting controls when to truncate item file names that are extremely long so they fit in the filesystem.
            The value must be less than MAX_PATH - SerializationFolderPathMaxLength - Length of GUID - length of file extension.
            Default value: 30
            -->
            <setting name="Serialization.MaxItemNameLengthBeforeTruncation" value="30" />

            <!--  REMOVE ORPHANS
            NOTE: This setting is only required when the 'Serialization.SerializationType' setting is set to YAML.
            If set to 'true', user syncing deletes matching users that are not serialized, in the same way as item syncing does.
            If set to 'false', users are only added or updated, in the same way as New Items Only item syncing works but updates are also synced.
            -->
            <setting name="Serialization.Security.RemoveOrphans" value="true" />

            <!--  DEFAULT PASSWORD
            Note: This setting is only required when the 'Serialization.SerializationType' setting is set to YAML.
            When NEW users are deserialized, their passwords are set to this value.
            If set to 'random', the password is set to a long randomly generated value, otherwise the literal value is used.
            If set to 'random', an admin must reset the user's password before it can be used.
            If a user already exists in Sitecore, their password is not altered when they are deserialized.
            Possible values: 'random', or any string equal to or greater than the value set in the 'Serialization.Security.MinPasswordLength' setting.
            -->
            <setting name="Serialization.Security.DefaultPassword" value="random" />

            <!--  NOTE: MINIMAL PASSWORD LENGTH
            Note: This setting is only required when the 'Serialization.SerializationType' setting is set to YAML.
            If the DefaultPassword setting is not set to 'random', this settings defines the minimum password length when a user is deserialized.
            The value must be greater than 0.
            Default value: 8
            -->
            <setting name="Serialization.Security.MinPasswordLength" value="8" />

        </settings>

        <fieldFormatters>
            <!--
            NOTE: These setting are only required when the 'Serialization.SerializationType' setting is set to YAML.
            These settings define how specific item field types are serialized to the file system.
            -->
            <fieldFormatter type="Sitecore.Data.Serialization.Yaml.Formatting.XmlFieldFormatter, Sitecore.Kernel" />
            <fieldFormatter type="Sitecore.Data.Serialization.Yaml.Formatting.MultilistFormatter, Sitecore.Kernel" />
            <fieldFormatter type="Sitecore.Data.Serialization.Yaml.Formatting.CheckboxFieldFormatter, Sitecore.Kernel" />
        </fieldFormatters>

        <userPredicate>
            <!--
            NOTE: These setting are only required when the 'Serialization.SerializationType' setting is set to YAML.
            If the <userPredicate> node is not enabled or does not contain any child nodes, the users are serialized without any filters.
            Each include must contain:
            - A domain, which includes all the users under that domain.
            or 
            - A domain with a user regex pattern that determines which users should be included under that domain.
             
            NOTE: The regex pattern rule applies only for the user's name and not for the domain name. 
            For example, for "sitecore\foo", the regex pattern is checked against "foo".

            EXAMPLE:
            <include domain="sitecore" />
            <include domain="extranet" pattern="^MySite.*$"/>
            
            Note: you can include the same domain in multiple include elements, with different regex patterns. -->
        </userPredicate>
        <rolePredicate>
            <!--
            NOTE: These setting are only required when the 'Serialization.SerializationType' setting is set to YAML.
            If the <rolePredicate> node is not enabled or does not contain child nodes, users are serialized without any filters.
            Each include must either contain:
            - A domain, which includes all the roles under that domain.
            or 
            - A domain with a role regex pattern that determines which specific roles should be included under that domain.
            
            NOTE: The regex pattern rule applies only for the user's name and not for the domain name. 
            For example, for "sitecore\foo", the regex pattern is checked against "foo".

            EXAMPLE: 
            <include domain="sitecore" />
            <include domain="extranet" pattern="^MySite.*$" />
            
            Note: you can include the same domain in multiple include elements, with different regex patterns. -->
        </rolePredicate>
    </sitecore>
</configuration>